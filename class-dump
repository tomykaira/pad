/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

typedef struct _NSZone NSZone;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _NSRange {
	unsigned _field1;
	unsigned _field2;
} NSRange;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

typedef struct sWORK sWORK;

typedef struct cAPPSTORE {
	bool _field1;
	bool _field2;
	bool _field3;
	bool _field4;
	bool _field5;
	bool _field6;
	int _field7;
	int _field8;
	id _field9;
	sWORK* _field10;
} cAPPSTORE;

@protocol NSObject
-(id)debugDescription;
-(id)description;
-(unsigned)retainCount;
-(id)autorelease;
-(oneway void)release;
-(id)retain;
-(BOOL)respondsToSelector:(SEL)selector;
-(BOOL)conformsToProtocol:(id)protocol;
-(BOOL)isMemberOfClass:(Class)aClass;
-(BOOL)isKindOfClass:(Class)aClass;
-(BOOL)isProxy;
-(id)performSelector:(SEL)selector withObject:(id)object withObject:(id)object3;
-(id)performSelector:(SEL)selector withObject:(id)object;
-(id)performSelector:(SEL)selector;
-(NSZone*)zone;
-(id)self;
-(Class)class;
-(Class)superclass;
-(unsigned)hash;
-(BOOL)isEqual:(id)equal;
@end

@protocol UIApplicationDelegate <NSObject>
@optional
@property(retain, nonatomic) UIWindow* window;
-(void)applicationProtectedDataDidBecomeAvailable:(id)applicationProtectedData;
-(void)applicationProtectedDataWillBecomeUnavailable:(id)applicationProtectedData;
-(void)applicationWillEnterForeground:(id)application;
-(void)applicationDidEnterBackground:(id)application;
-(void)application:(id)application didReceiveLocalNotification:(id)notification;
-(void)application:(id)application didReceiveRemoteNotification:(id)notification;
-(void)application:(id)application didFailToRegisterForRemoteNotificationsWithError:(id)error;
-(void)application:(id)application didRegisterForRemoteNotificationsWithDeviceToken:(id)deviceToken;
-(void)application:(id)application didChangeStatusBarFrame:(CGRect)frame;
-(void)application:(id)application willChangeStatusBarFrame:(CGRect)frame;
-(void)application:(id)application didChangeStatusBarOrientation:(int)orientation;
-(void)application:(id)application willChangeStatusBarOrientation:(int)orientation duration:(double)duration;
-(void)applicationSignificantTimeChange:(id)change;
-(void)applicationWillTerminate:(id)application;
-(void)applicationDidReceiveMemoryWarning:(id)application;
-(BOOL)application:(id)application openURL:(id)url sourceApplication:(id)application3 annotation:(id)annotation;
-(BOOL)application:(id)application handleOpenURL:(id)url;
-(void)applicationWillResignActive:(id)application;
-(void)applicationDidBecomeActive:(id)application;
-(BOOL)application:(id)application didFinishLaunchingWithOptions:(id)options;
-(void)applicationDidFinishLaunching:(id)application;
@end

@protocol UITextFieldDelegate <NSObject>
@optional
-(BOOL)textFieldShouldReturn:(id)textField;
-(BOOL)textFieldShouldClear:(id)textField;
-(BOOL)textField:(id)field shouldChangeCharactersInRange:(NSRange)range replacementString:(id)string;
-(void)textFieldDidEndEditing:(id)textField;
-(BOOL)textFieldShouldEndEditing:(id)textField;
-(void)textFieldDidBeginEditing:(id)textField;
-(BOOL)textFieldShouldBeginEditing:(id)textField;
@end

@protocol GKAchievementViewControllerDelegate
-(void)achievementViewControllerDidFinish:(id)achievementViewController;
@end

@protocol GKLeaderboardViewControllerDelegate
-(void)leaderboardViewControllerDidFinish:(id)leaderboardViewController;
@end

@protocol UIWebViewDelegate <NSObject>
@optional
-(void)webView:(id)view didFailLoadWithError:(id)error;
-(void)webViewDidFinishLoad:(id)webView;
-(void)webViewDidStartLoad:(id)webView;
-(BOOL)webView:(id)view shouldStartLoadWithRequest:(id)request navigationType:(int)type;
@end

@protocol UIAccelerometerDelegate <NSObject>
@optional
-(void)accelerometer:(id)accelerometer didAccelerate:(id)accelerate;
@end

@protocol SKRequestDelegate <NSObject>
@optional
-(void)request:(id)request didFailWithError:(id)error;
-(void)requestDidFinish:(id)request;
@end

@protocol SKProductsRequestDelegate <SKRequestDelegate>
-(void)productsRequest:(id)request didReceiveResponse:(id)response;
@end

@protocol SKPaymentTransactionObserver <NSObject>
-(void)paymentQueue:(id)queue updatedTransactions:(id)transactions;
@optional
-(void)paymentQueueRestoreCompletedTransactionsFinished:(id)finished;
-(void)paymentQueue:(id)queue restoreCompletedTransactionsFailedWithError:(id)error;
-(void)paymentQueue:(id)queue removedTransactions:(id)transactions;
@end

@protocol UIScrollViewDelegate <NSObject>
@optional
-(void)scrollViewDidScrollToTop:(id)scrollView;
-(BOOL)scrollViewShouldScrollToTop:(id)scrollView;
-(void)scrollViewDidEndZooming:(id)scrollView withView:(id)view atScale:(float)scale;
-(void)scrollViewWillBeginZooming:(id)scrollView withView:(id)view;
-(id)viewForZoomingInScrollView:(id)scrollView;
-(void)scrollViewDidEndScrollingAnimation:(id)scrollView;
-(void)scrollViewDidEndDecelerating:(id)scrollView;
-(void)scrollViewWillBeginDecelerating:(id)scrollView;
-(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
-(void)scrollViewWillEndDragging:(id)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint*)offset;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewDidZoom:(id)scrollView;
-(void)scrollViewDidScroll:(id)scrollView;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>
@optional
-(void)textViewDidChangeSelection:(id)textView;
-(void)textViewDidChange:(id)textView;
-(BOOL)textView:(id)view shouldChangeTextInRange:(NSRange)range replacementText:(id)text;
-(void)textViewDidEndEditing:(id)textView;
-(void)textViewDidBeginEditing:(id)textView;
-(BOOL)textViewShouldEndEditing:(id)textView;
-(BOOL)textViewShouldBeginEditing:(id)textView;
@end

@protocol UIAlertViewDelegate <NSObject>
@optional
-(BOOL)alertViewShouldEnableFirstOtherButton:(id)alertView;
-(void)alertView:(id)view didDismissWithButtonIndex:(int)buttonIndex;
-(void)alertView:(id)view willDismissWithButtonIndex:(int)buttonIndex;
-(void)didPresentAlertView:(id)view;
-(void)willPresentAlertView:(id)view;
-(void)alertViewCancel:(id)cancel;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
@end

__attribute__((visibility("hidden")))
@interface AppDelegate : XXUnknownSuperclass <UIApplicationDelegate> {
@private
	UIWindow* _window;
	ViewController* _viewController;
}
@property(retain, nonatomic) ViewController* viewController;
@property(retain, nonatomic) UIWindow* window;
-(void)applicationWillTerminate:(id)application;
-(BOOL)application:(id)application handleOpenURL:(id)url;
-(void)applicationDidBecomeActive:(id)application;
-(void)applicationWillEnterForeground:(id)application;
-(void)applicationDidEnterBackground:(id)application;
-(void)applicationWillResignActive:(id)application;
-(BOOL)application:(id)application didFinishLaunchingWithOptions:(id)options;
@end

__attribute__((visibility("hidden")))
@interface MyTextField : _kCFStreamPropertyHTTPResponseHeader {
}
-(CGRect)borderRectForBounds:(CGRect)bounds;
-(void)dealloc;
-(void)drawRect:(CGRect)rect;
@end

__attribute__((visibility("hidden")))
@interface ViewController : XXUnknownSuperclass <UITextFieldDelegate, GKAchievementViewControllerDelegate, GKLeaderboardViewControllerDelegate, UIWebViewDelegate> {
@private
	EAGLContext* context;
	BOOL animating;
	int animationFrameInterval;
	BOOL bRunningInIpad;
	UITextField* pTextField;
	unsigned char maxTextLeng;
	BOOL inEditing;
	BOOL inNumberOnly;
	UIWebView* pUiWebView;
	short webViewYtgt;
	short webViewStartLine;
	float webViewY;
	CGPoint webViewPos;
	CGRect webBounds;
	EAGLContext* _context;
	CADisplayLink* displayLink;
	BOOL bWebLoaded;
}
@property(assign, nonatomic) CADisplayLink* displayLink;
@property(retain, nonatomic) EAGLContext* context;
@property(readonly, assign, getter=isWebLoaded) BOOL bWebLoaded;
@property(assign, nonatomic) int animationFrameInterval;
@property(readonly, assign, nonatomic, getter=isAnimating) BOOL animating;
-(void)webViewDidFinishLoad:(id)webView;
-(void)webViewDidStartLoad:(id)webView;
-(BOOL)webView:(id)view shouldStartLoadWithRequest:(id)request navigationType:(int)type;
-(int)webViewPosUpd:(int)upd;
-(void)delWebView;
-(void)addWebView:(int)view :(int)arg2 :(int)arg3 :(int)arg4 :(const char*)arg5;
-(void)leaderboardViewControllerDidFinish:(id)leaderboardViewController;
-(void)showLeaderboard;
-(void)achievementViewControllerDidFinish:(id)achievementViewController;
-(void)showAchievements;
-(BOOL)textFieldShouldReturn:(id)textField;
-(void)textFieldDidEndEditing:(id)textField;
-(BOOL)textFieldShouldBeginEditing:(id)textField;
-(void)textFieldClose;
-(void)textFieldEditingChanged:(id)changed;
-(void)setTextFieldText:(const char*)text;
-(const char*)getTextFieldText;
-(void)delTextField;
-(BOOL)isEditingTextField;
-(void)hideTextField:(bool)field;
-(void)addNumberField:(CGRect)field fontSize:(int)size defText:(const char*)text phText:(const char*)text4 maxLeng:(int)leng;
-(void)addTextField:(CGRect)field fontSize:(int)size defText:(const char*)text phText:(const char*)text4 maxLeng:(int)leng;
-(void)chgTextFieldMag:(float)mag :(float)arg2;
-(void)chgTextFieldPos:(float)pos :(float)arg2;
-(void)drawFrame;
-(void)restoreFromBackground;
-(void)enterBackground;
-(void)abandon;
-(void)handleUrl:(id)url;
-(void)stopAnimation;
-(void)startAnimation;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(void)didReceiveMemoryWarning;
-(bool)isRunningInIpad;
-(void)setRunningInIpad:(BOOL)ipad;
-(void)viewDidUnload;
-(void)viewDidLoad;
@end

__attribute__((visibility("hidden")))
@interface ciosAlert : XXUnknownSuperclass <UIAccelerometerDelegate> {
@private
	UIAlertView* usageAlertView;
	int bindex;
	bool _bClicked;
	bool _bOpen;
	bool _bDismissed;
	NSString* _ptitle;
	NSString* _pmsg;
	int _type;
}
@property(retain, nonatomic) UIAlertView* usageAlertView;
-(bool)_exec;
-(bool)isOpen;
-(bool)isPushed;
-(int)getPushedButton;
-(void)releaseAlert;
-(void)forceDismiss:(bool)dismiss;
-(void)alertView:(id)view didDismissWithButtonIndex:(int)buttonIndex;
-(void)didPresentAlertView:(id)view;
-(void)alertViewCancel:(id)cancel;
-(void)modalViewCancel:(id)cancel;
-(void)viewRelease:(id)release;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)openAlert:(id)alert :(id)arg2 :(int)arg3;
-(void)dealloc;
-(id)init;
@end

__attribute__((visibility("hidden")))
@interface EAGLView : XXUnknownSuperclass {
@private
	int framebufferWidth;
	int framebufferHeight;
	unsigned defaultFramebuffer;
	unsigned colorRenderbuffer;
	unsigned depthRenderbuffer;
	EAGLContext* context;
}
@property(retain, nonatomic) EAGLContext* context;
+(Class)layerClass;
-(void)touchesCanceled:(id)canceled withEvent:(id)event;
-(void)touchesEnded:(id)ended withEvent:(id)event;
-(void)touchesMoved:(id)moved withEvent:(id)event;
-(void)touchesBegan:(id)began withEvent:(id)event;
-(void)layoutSubviews;
-(BOOL)presentFramebuffer;
-(void)setFramebuffer;
-(void)deleteFramebuffer;
-(void)createFramebuffer;
-(void)setFbSize2ios;
-(void)dealloc;
-(id)initWithCoder:(id)coder;
@end

__attribute__((visibility("hidden")))
@interface FBNetworkReachability : XXUnknownSuperclass {
@private
	SCNetworkReachabilityRef reachability_;
	int connectionMode_;
	NSString* ipaddress;
}
@property(copy) NSString* ipaddress;
@property(readonly, assign) BOOL reachable;
@property(assign) int connectionMode;
+(id)sharedInstance;
-(id)description;
-(void)refresh;
-(id)IPAddress;
-(void)stopNotifier;
-(BOOL)startNotifier;
-(void)_updateConnectionModeWithFlags:(unsigned)flags;
-(int)_getConnectionModeWithFlags:(unsigned)flags;
-(id)_getIPAddressWiFilEnabled:(BOOL)enabled;
-(void)dealloc;
-(id)init;
@end

__attribute__((visibility("hidden")))
@interface cStoreHandler : XXUnknownSuperclass <SKProductsRequestDelegate, SKPaymentTransactionObserver> {
@private
	cAPPSTORE* _parent;
	bool bReceived;
}
-(void)productsRequest:(id)request didReceiveResponse:(id)response;
-(void)request:(id)request didFailWithError:(id)error;
-(void)requestDidFinish:(id)request;
-(bool)isFinished;
-(void)setWork:(cAPPSTORE*)work;
-(void)requestProductList:(const char**)list nums:(int)nums;
-(void)applicationWillEnterForeground;
-(void)applicationDidEnterBackground;
-(void)setupObserver;
-(void)restoreTransactions;
-(void)paymentQueue:(id)queue updatedTransactions:(id)transactions;
@end

__attribute__((visibility("hidden")))
@interface cMAILFORM : XXUnknownSuperclass {
@private
	short w;
	short h;
	short navh;
	short divs;
}
-(void)drawRect:(CGRect)rect;
-(void)setRects:(short)rects :(short)arg2 :(short)arg3 :(short)arg4;
-(id)initWithFrame:(CGRect)frame;
@end

__attribute__((visibility("hidden")))
@interface cMAILEDIT : XXUnknownSuperclass <UITextViewDelegate, UIAlertViewDelegate> {
@private
	UINavigationBar* navigationBar;
	UITextView* pTextView;
	UILabel* pMailTo;
	UILabel* pMailBody;
	cMAILFORM* pMailFormView;
	BOOL bSend;
	BOOL bInEdit;
	NSString* pszMailTo;
	NSString* pszMailBody;
	NSString* pszEditTitle;
	NSString* pszVulHit;
}
-(void)cancel:(id)cancel;
-(void)done:(id)done;
-(const char*)getInputText;
-(void)keyboardWillHide:(id)keyboard;
-(void)keyboardWillShow:(id)keyboard;
-(void)flipBack;
-(void)flipIn;
-(void)setMailTo:(const char*)to msgEditTitle:(const char*)title msgBodyTitle:(const char*)title3 msgVulHit:(const char*)hit;
-(void)endofAnim;
-(BOOL)textView:(id)view shouldChangeTextInRange:(NSRange)range replacementText:(id)text;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(void)viewDidUnload;
-(void)viewDidLoad;
-(void)didReceiveMemoryWarning;
-(void)loadView;
-(id)init;
@end

@interface XXUnknownSuperclass (Base64)
+(id)dataFromBase64String:(id)base64String;
-(id)base64EncodedStringWithSeparateLines:(BOOL)separateLines;
-(id)base64EncodedString;
@end
